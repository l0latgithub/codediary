class Solution:
    def minOperations(self, nums: List[int], x: int) -> int:

	"""
	You are given an integer array nums and an integer x. 
	In one operation, you can either remove the leftmost or 
	the rightmost element from the array nums and subtract 
	its value from x. Note that this modifies the array for future operations.

	Return the minimum number of operations to reduce x to 
	exactly 0 if it's possible, otherwise, return -1.
	"""
        
#         target = sum(nums)-x
        
#         ans = -1
        
#         runsum,lo = 0,0
        
#         for hi, val in enumerate(nums):
#             runsum += val
            
#             while lo<=hi and runsum>target:
#                 runsum -= nums[lo]
#                 lo+=1
            
#             if runsum==target:
#                 ans = max(ans, hi-lo+1)
        
#         return len(nums)-ans if ans>-1 else -1

        runsum = sum(nums)
        numlen = len(nums)
        lo = 0
        ans = len(nums)+1
        for hi, val in enumerate(nums):
            runsum -=val
            
            while lo<=hi and runsum<x:
                runsum+=nums[lo]
                lo+=1
            
            if runsum==x:
                ans = min(ans, numlen-(hi-lo+1))
        return ans if ans<(len(nums)+1) else -1